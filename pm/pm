#!/usr/bin/env bash
#
# Copyright (c) 2011 Jakub Szafra≈Ñski <s@samu.pl>
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

# PortManager
#
# syntax and help availble after invoking `pm -h`.

pm_version=0.1
basepath="/usr/ports"

usage() {
    echo -e "usage: pm [-hv]\n"\
            "      pm [-pc] install port\n"\
            "      pm [-c] deinstall port"\
            "      pm [-l] rmunused"\
            "      pm [-n|-k] search phrase"
}

pm_noexist() {
	echo "$1: The requested port does not exist!"
	exit 2
}

pm_help() {
	echo -e \
			"\nThe following commands are available:\n\n"\
			"    install    Build and install the specified port.\n\n"\
			"    deinstall  Remove the installed port.\n\n"\
			"    rmunused   Remove all unused ports - mostly left dependencies.\n\n"
			"    search     search the ports database for a phrase specified."
	echo -e \
			"\nPM accepts following switches as it's first argument:\n\n"\
            "    -c      Clean the workdir after the compilation (or deinstallation) is\n"\
            "            done. One would use this option to prevent unnesesary disk space\n"\
            "            usage, but if you would like to recompile the port later, don't\n"\
            "            use this switch, and the compilation process would be noticeable\n"\
            "            faster.\n\n"\
	        "    -h      Displays this help document.\n\n"\
            "    -k      During the search process, the 'key' keyword will be used.\n\n"\
            "    -l      When using rmunused, do not actually remove unused dependencies,\n"\
            "            but list them.\n\n"\
            "    -n      During the search process, the 'name' keyword will be used.\n\n"\
            "    -p      Preconf, can be used only in INSTALL option. Before the\n"\
            "            compilation process will start, PM will invoke\n"\
            "            'make config' on all dependencies, which will be required\n"\
            "            by the port you are about to install. This can be a time saver,\n"\
            "            when the compilation process can take a long time (countable in\n"\
            "            hours) - you can configure all ports and go for a coffee.\n\n"\
            "    -v      Prints version and author information.\n\n"
            
            # exit status
    echo -e \
			"\nPM will exit, returning one of the follow values:\n\n"\
			"     0      Everything went fine.\n"\
			"     1      Incorrect syntax, or missing argument.\n"\
			"     2      The requested port does not exist.\n"
}

if [[ "$1" == "" ]]; then
    usage
    exit 1
fi

while getopts 'hvpcnkl' COMMAND_LINE_ARGUMENT ; do
    case "${COMMAND_LINE_ARGUMENT}" in
    h)  usage ; pm_help; exit 0 ;;
    v)  pm_ver=1 ;;
    p)  pm_preconf=1 ;;
    c)  pm_clean=1 ;;
    n)  pm_s_name=1 ;;
    k)  pm_s_key=1 ;;
    l)  pm_justlist=1 ;;
    *)  usage ; exit 1 ;;
    esac
done
shift $(( $OPTIND - 1 ))

case "$1" in
	install)
		if [ "$2" == "" ]; then
			usage ; exit 1
		fi
		if [ ! -d "${basepath}/${2}" ]; then
			pm_noexist $2
		fi
		cd $basepath
		cd $2
		if [ "$pm_preconf" == 1 ]; then
			missing=`/usr/bin/make all-depends-list`
			miscnt=`echo $missing |wc -w |awk '{print $1}'`
			tmp=1
			for port in $missing; do
				echo -n "[ ${tmp}/${miscnt} ] "
				echo -n "${port} "
				cd ${port}
				/usr/bin/make config
				tmp=$(( tmp + 1 ))
			done
		fi
		/usr/bin/make config
		/usr/bin/make install
		if [ "$pm_clean" = 1 ]; then
			/usr/bin/make clean
		fi;
		;;
		
	deinstall)
		if [ "$2" == "" ]; then
			usage ; exit 1
		fi
		if [ ! -d "${basepath}/${2}" ]; then
			pm_noexist $2
		fi
		cd $basepath
		cd $2
		/usr/bin/make deinstall
		if [ "$pm_clean" = 1 ]; then
			/usr/bin/make clean
		fi;
		;;
		
	rmunused)
		find -s /var/db/pkg/ -type d -mindepth 1 | while read i; do
			if [ ! -s "$i/+REQUIRED_BY" ]; then 
				if [ "$i" != "" ]; then
					if [ "$pm_justlist" == 1 ]; then
						basename $i
					else
						echo "You are about to REMOVE all unused dependencies. If you're sure about what you are just about to do, press any key, otherwise - abort this script using CTRL-C!"
						read						
						pkgname=`basename $i`
						eval pkg_delete $pkgname
					fi
				fi
			fi
		done
		;;
		
	search)
		if [ "$2" == "" ]; then
			usage ; exit 1
		fi
		if [[ "$pm_s_name" != 1 && "$pm_s_key" != 1 ]]; then
			usage ; exit 1
		fi
		makecmd="/usr/bin/make search"
		if [ "$pm_s_name" == 1 ]; then
			makecmd="$makecmd name=\"$2\""
		fi
		if [ "$pm_s_key" == 1 ]; then
			makecmd="$makecmd key=\"$2\""
		fi
		cd $basepath
		eval $makecmd |egrep "Port|Path|Info" |sed -e "s/\(Info:.*\)/\1\\
		 /"
		;;
		
	*) usage ; exit 1 ;;
esac
